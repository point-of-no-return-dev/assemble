{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createMountWrapper;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _airbnbPropTypes = require(\"airbnb-prop-types\");\n\nvar _RootFinder = _interopRequireDefault(require(\"./RootFinder\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/* eslint react/forbid-prop-types: 0 */\n\n\nvar stringOrFunction = _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].string]);\n\nvar makeValidElementType = function makeValidElementType(adapter) {\n  if (!adapter) {\n    return stringOrFunction;\n  }\n\n  function validElementTypeRequired(props, propName) {\n    if (!adapter.isValidElementType) {\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n\n      return stringOrFunction.isRequired.apply(stringOrFunction, [props, propName].concat(args));\n    }\n\n    var propValue = props[propName]; // eslint-disable-line react/destructuring-assignment\n\n    if (adapter.isValidElementType(propValue)) {\n      return null;\n    }\n\n    return new TypeError(\"\".concat(propName, \" must be a valid element type!\"));\n  }\n\n  function validElementType(props, propName) {\n    var propValue = props[propName];\n\n    if (propValue == null) {\n      return null;\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    return validElementTypeRequired.apply(void 0, [props, propName].concat(args));\n  }\n\n  validElementType.isRequired = validElementTypeRequired;\n  return validElementType;\n};\n/**\n * This is a utility component to wrap around the nodes we are\n * passing in to `mount()`. Theoretically, you could do everything\n * we are doing without this, but this makes it easier since\n * `renderIntoDocument()` doesn't really pass back a reference to\n * the DOM node it rendered to, so we can't really \"re-render\" to\n * pass new props in.\n */\n\n\nfunction createMountWrapper(node) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var adapter = options.adapter,\n      WrappingComponent = options.wrappingComponent;\n\n  var WrapperComponent = /*#__PURE__*/function (_React$Component) {\n    _inherits(WrapperComponent, _React$Component);\n\n    var _super = _createSuper(WrapperComponent);\n\n    function WrapperComponent() {\n      var _this;\n\n      _classCallCheck(this, WrapperComponent);\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      var _this$props = _this.props,\n          props = _this$props.props,\n          wrappingComponentProps = _this$props.wrappingComponentProps,\n          context = _this$props.context;\n      _this.state = {\n        mount: true,\n        props: props,\n        wrappingComponentProps: wrappingComponentProps,\n        context: context\n      };\n      return _this;\n    }\n\n    _createClass(WrapperComponent, [{\n      key: \"setChildProps\",\n      value: function setChildProps(newProps, newContext) {\n        var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n        var _this$state = this.state,\n            oldProps = _this$state.props,\n            oldContext = _this$state.context;\n\n        var props = _objectSpread(_objectSpread({}, oldProps), newProps);\n\n        var context = _objectSpread(_objectSpread({}, oldContext), newContext);\n\n        this.setState({\n          props: props,\n          context: context\n        }, callback);\n      }\n    }, {\n      key: \"setWrappingComponentProps\",\n      value: function setWrappingComponentProps(props) {\n        var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n        this.setState({\n          wrappingComponentProps: props\n        }, callback);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props2 = this.props,\n            Component = _this$props2.Component,\n            refProp = _this$props2.refProp;\n        var _this$state2 = this.state,\n            mount = _this$state2.mount,\n            props = _this$state2.props,\n            wrappingComponentProps = _this$state2.wrappingComponentProps;\n        if (!mount) return null; // eslint-disable-next-line react/jsx-props-no-spreading\n\n        var component = /*#__PURE__*/_react[\"default\"].createElement(Component, _extends({\n          ref: refProp\n        }, props));\n\n        if (WrappingComponent) {\n          return (\n            /*#__PURE__*/\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            _react[\"default\"].createElement(WrappingComponent, wrappingComponentProps, /*#__PURE__*/_react[\"default\"].createElement(_RootFinder[\"default\"], null, component))\n          );\n        }\n\n        return component;\n      }\n    }]);\n\n    return WrapperComponent;\n  }(_react[\"default\"].Component);\n\n  WrapperComponent.propTypes = {\n    Component: makeValidElementType(adapter).isRequired,\n    refProp: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, (0, _airbnbPropTypes.ref)()]),\n    props: _propTypes[\"default\"].object.isRequired,\n    wrappingComponentProps: _propTypes[\"default\"].object,\n    context: _propTypes[\"default\"].object\n  };\n  WrapperComponent.defaultProps = {\n    refProp: null,\n    context: null,\n    wrappingComponentProps: null\n  };\n\n  if (options.context && (node.type.contextTypes || options.childContextTypes)) {\n    // For full rendering, we are using this wrapper component to provide context if it is\n    // specified in both the options AND the child component defines `contextTypes` statically\n    // OR the merged context types for all children (the node component or deeper children) are\n    // specified in options parameter under childContextTypes.\n    // In that case, we define both a `getChildContext()` function and a `childContextTypes` prop.\n    var childContextTypes = _objectSpread(_objectSpread({}, node.type.contextTypes), options.childContextTypes);\n\n    WrapperComponent.prototype.getChildContext = function getChildContext() {\n      return this.state.context;\n    };\n\n    WrapperComponent.childContextTypes = childContextTypes;\n  }\n\n  return WrapperComponent;\n} //# sourceMappingURL=createMountWrapper.js.map","map":null,"metadata":{},"sourceType":"module"}