{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/assemble/assemble_app/app/javascript/components/Components/Header.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React, { Component } from 'react';\nimport { Collapse, Container, Nav, Navbar, NavbarBrand, NavItem, NavbarToggler, Row, Link, Image } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nvar Header = /*#__PURE__*/function (_Component) {\n  _inherits(Header, _Component);\n\n  var _super = _createSuper(Header);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _super.call(this, props);\n\n    _this.toggleNavbar = function () {\n      _this.state.collapsed === true ? _this.setState({\n        collapsed: false\n      }) : _this.setState({\n        collapsed: true\n      });\n    };\n\n    _this.state = {\n      collapsed: true\n    };\n    return _this;\n  } // ternary operator that allows us to toggle between having the navbar collapsed or expanded\n\n\n  _createClass(Header, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        id: \"navbar-logo\",\n        src: \"https://i.ibb.co/wST166t/assemble-logo.png\",\n        width: \"35\",\n        height: \"35\",\n        alt: \"Assemble logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(NavbarBrand, {\n        href: \"/\",\n        className: \"mr-auto\",\n        id: \"navbar-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, \"Assemble\"), /*#__PURE__*/React.createElement(NavbarToggler, {\n        id: \"navbar-hamburger\",\n        onClick: this.toggleNavbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Collapse, {\n        isOpen: !this.state.collapsed,\n        navbar: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        navbar: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"/index\",\n        id: \"navbar-text-links\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, \"View Projects\")), this.props.logged_in && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/rooms\",\n        id: \"navbar-text-links\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, \"Messenger\")), /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"/project_new\",\n        id: \"navbar-text-links\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }\n      }, \"Create a Project\")), /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: this.props.sign_out_route,\n        id: \"navbar-text-links\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }, \"Sign Out\"))), !this.props.logged_in && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: this.props.sign_in_route,\n        id: \"navbar-text-links\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }\n      }, \"Sign In\")), /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/users/sign_up\",\n        id: \"navbar-text-links\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      }, \"Sign Up\")))))));\n    }\n  }]);\n\n  return Header;\n}(Component);\n\nexport default Header;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/assemble/assemble_app/app/javascript/components/Components/Header.js"],"names":["React","Component","Collapse","Container","Nav","Navbar","NavbarBrand","NavItem","NavbarToggler","Row","Link","Image","NavLink","Header","props","toggleNavbar","state","collapsed","setState","logged_in","sign_out_route","sign_in_route"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n    Collapse,\n    Container,\n    Nav,\n    Navbar,\n    NavbarBrand,\n    NavItem,\n    NavbarToggler,\n    Row,\n    Link,\n    Image\n} from 'reactstrap'\nimport { NavLink } from 'react-router-dom'\n\n\nclass Header extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            collapsed: true\n        }\n    }\n    // ternary operator that allows us to toggle between having the navbar collapsed or expanded\n    toggleNavbar = () => {\n        this.state.collapsed === true ?\n        this.setState({ collapsed: false }) :\n        this.setState({ collapsed: true })\n    }\n    render(){\n        return (\n            <React.Fragment>\n            {/* sets the navbar's color/theme */}\n            <Navbar>\n            <img\n                id=\"navbar-logo\"\n                src=\"https://i.ibb.co/wST166t/assemble-logo.png\"\n                width=\"35\"\n                height=\"35\"\n                alt=\"Assemble logo\">\n                    \n             </img>\n\n                {/* navbar logo */}\n                <NavbarBrand \n                    href=\"/\" \n                    className=\"mr-auto\" \n                    id=\"navbar-text\"\n                >Assemble\n                </NavbarBrand>\n                {/* button that allows us to toggle navbar open/closed */}\n                <NavbarToggler id=\"navbar-hamburger\" onClick={ this.toggleNavbar }/>\n                <Collapse isOpen={ !this.state.collapsed } navbar>\n                    {/* Actual Navbar */}\n                    <Nav navbar>\n                        {/* link to index */}\n                        <NavItem>\n                            <NavLink to=\"/index\" id=\"navbar-text-links\">View Projects</NavLink>\n                        </NavItem>\n                        {/* you see this if you're signed in */}\n                        { this.props.logged_in &&\n                        <>\n                            <NavItem>\n                                {/* Need this NavLink to lead to the current_user's profile. */}\n                                <a href=\"/rooms\" id=\"navbar-text-links\">Messenger</a>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink to=\"/project_new\" id=\"navbar-text-links\">Create a Project</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <a href={ this.props.sign_out_route } id=\"navbar-text-links\">Sign Out</a>\n                            </NavItem>\n                        </>\n                        }\n                        {/* you see this if you're signed out */}\n                        { !this.props.logged_in &&\n                        <>\n                            <NavItem>\n                                <a href={this.props.sign_in_route} id=\"navbar-text-links\">Sign In</a>\n                            </NavItem>\n                            <NavItem>\n                                <a href=\"/users/sign_up\" id=\"navbar-text-links\">Sign Up</a>\n                            </NavItem>\n                        </>\n                        }\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        </React.Fragment>\n    )\n    }\n}\n\nexport default Header"]},"metadata":{},"sourceType":"module"}