{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/assemble/app/javascript/components/Pages/Index.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React, { Component } from 'react';\nimport { Button, Card, CardTitle, Col, Row } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport Filter from '../Components/Filter.js';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Filter, {\n        projects: this.props.projects,\n        projectsToBeShown: this.props.projectsToBeShown,\n        currentFiltersSelected: this.props.currentFiltersSelected,\n        updateCurrentFiltersSelected: this.props.updateCurrentFiltersSelected,\n        handleChange: this.props.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        id: \"filter-cards\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }, this.props.currentFiltersSelected.length === 0 && /*#__PURE__*/React.createElement(React.Fragment, null, this.props.projects.map(function (project, index) {\n        return /*#__PURE__*/React.createElement(Col, {\n          sm: \"4\",\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          id: \"filter-index-card\",\n          body: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(CardTitle, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          id: \"h3-filter-blue\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 37\n          }\n        }, project.name), /*#__PURE__*/React.createElement(\"p\", {\n          id: \"body-text-index\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 37\n          }\n        }, project.description), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(NavLink, {\n          to: \"/project_show/\".concat(project.id),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          id: \"primary-btn\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 41\n          }\n        }, \"Show Page\"))))));\n      })), this.props.currentFiltersSelected.length !== 0 &&\n      /*#__PURE__*/\n      // Draw data from projectsToBeShown instead of projects from props\n      React.createElement(React.Fragment, null, this.props.projectsToBeShown.map(function (project, index) {\n        return /*#__PURE__*/React.createElement(Col, {\n          sm: \"4\",\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          id: \"filter-index-card\",\n          body: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(CardTitle, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          id: \"h3-filter-blue\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 37\n          }\n        }, project.name), /*#__PURE__*/React.createElement(\"p\", {\n          id: \"body-text-index\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }\n        }, project.description), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(NavLink, {\n          to: \"/project_show/\".concat(project.id),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          id: \"primary-btn\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 41\n          }\n        }, \"Show Page\"))))));\n      }))));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/assemble/app/javascript/components/Pages/Index.js"],"names":["React","Component","Button","Card","CardTitle","Col","Row","NavLink","Filter","Index","props","projects","projectsToBeShown","currentFiltersSelected","updateCurrentFiltersSelected","handleChange","length","map","project","index","name","description","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport { Button, Card, CardTitle, Col, Row } from 'reactstrap'\nimport { NavLink } from 'react-router-dom'\nimport Filter from '../Components/Filter.js'\n\nclass Index extends Component {\n    render() {\n        return(\n            <React.Fragment>\n                <Filter \n                    projects = { this.props.projects }\n                    projectsToBeShown = { this.props.projectsToBeShown }\n                    currentFiltersSelected = { this.props.currentFiltersSelected }\n                    updateCurrentFiltersSelected = { this.props.updateCurrentFiltersSelected }\n                    handleChange = { this.props.handleChange }\n                />\n                <Row id=\"filter-cards\">\n                    {/* If there are no filters selected, render all the Projects */}\n                    {this.props.currentFiltersSelected.length === 0 && \n                    <>\n                        {this.props.projects.map((project, index) => {\n                            return (\n                            <Col sm=\"4\" key={ index }>\n                                <Card id=\"filter-index-card\" body>\n                                <CardTitle>\n                                    <h3 id=\"h3-filter-blue\">{ project.name }</h3>\n                                    <p id=\"body-text-index\">{ project.description }</p>\n                                    <p>\n                                    <NavLink to={`/project_show/${project.id}`}>\n                                        <Button \n                                            id=\"primary-btn\"\n                                        >Show Page\n                                        </Button>\n                                    </NavLink>\n                                    </p>\n                                </CardTitle>\n                                </Card>\n                            </Col>\n                            )\n                        })}\n                    </>\n                    }\n                    {/* If there are filters selected, render this.props.projectsToBeShown */}\n                    {this.props.currentFiltersSelected.length !== 0 && \n                    // Draw data from projectsToBeShown instead of projects from props\n                    <>\n                        {this.props.projectsToBeShown.map((project, index) => {\n                            return (\n                            <Col sm=\"4\" key={ index }>\n                                <Card id=\"filter-index-card\" body>\n                                <CardTitle>\n                                    <h3 id=\"h3-filter-blue\">{ project.name }</h3>\n                                    <p id=\"body-text-index\">{ project.description }</p>\n                                    <p>\n                                    <NavLink to={`/project_show/${project.id}`}>\n                                        <Button \n                                            id=\"primary-btn\"\n                                        >Show Page\n                                        </Button>\n                                    </NavLink>\n                                    </p>\n                                </CardTitle>\n                                </Card>\n                            </Col>\n                            )\n                        })}\n                    </>\n                    }\n\n                </Row>\n            </React.Fragment>\n        )\n    }\n}\nexport default Index"]},"metadata":{},"sourceType":"module"}